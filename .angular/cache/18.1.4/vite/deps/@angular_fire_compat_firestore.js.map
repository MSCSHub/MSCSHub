{
  "version": 3,
  "sources": ["../../../../../node_modules/@firebase/firestore-compat/dist/index.esm2017.js", "../../../../../node_modules/@angular/fire/fesm2022/angular-fire-compat-firestore.mjs"],
  "sourcesContent": ["import firebase from '@firebase/app-compat';\nimport { FirestoreError, Bytes, _isBase64Available, enableIndexedDbPersistence, enableMultiTabIndexedDbPersistence, clearIndexedDbPersistence, _DatabaseId, _logWarn, connectFirestoreEmulator, enableNetwork, disableNetwork, _validateIsNotUsedTogether, waitForPendingWrites, onSnapshotsInSync, collection, doc, collectionGroup, runTransaction, ensureFirestoreConfigured, WriteBatch as WriteBatch$1, executeWrite, loadBundle, namedQuery, DocumentSnapshot as DocumentSnapshot$1, DocumentReference as DocumentReference$1, _DocumentKey, refEqual, setDoc, updateDoc, deleteDoc, onSnapshot, getDocFromCache, getDocFromServer, getDoc, snapshotEqual, query, where, orderBy, limit, limitToLast, startAt, startAfter, endBefore, endAt, queryEqual, getDocsFromCache, getDocsFromServer, getDocs, QuerySnapshot as QuerySnapshot$1, addDoc, _cast, AbstractUserDataWriter, setLogLevel as setLogLevel$1, QueryDocumentSnapshot as QueryDocumentSnapshot$1, _debugAssert, FieldPath as FieldPath$1, _FieldPath, serverTimestamp, deleteField, arrayUnion, arrayRemove, increment, GeoPoint, Timestamp, CACHE_SIZE_UNLIMITED } from '@firebase/firestore';\nimport { getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\nconst name = \"@firebase/firestore-compat\";\nconst version = \"0.3.34\";\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction validateSetOptions(methodName, options) {\n  if (options === undefined) {\n    return {\n      merge: false\n    };\n  }\n  if (options.mergeFields !== undefined && options.merge !== undefined) {\n    throw new FirestoreError('invalid-argument', `Invalid options passed to function ${methodName}(): You cannot ` + 'specify both \"merge\" and \"mergeFields\".');\n  }\n  return options;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Helper function to assert Uint8Array is available at runtime. */\nfunction assertUint8ArrayAvailable() {\n  if (typeof Uint8Array === 'undefined') {\n    throw new FirestoreError('unimplemented', 'Uint8Arrays are not available in this environment.');\n  }\n}\n/** Helper function to assert Base64 functions are available at runtime. */\nfunction assertBase64Available() {\n  if (!_isBase64Available()) {\n    throw new FirestoreError('unimplemented', 'Blobs are unavailable in Firestore in this environment.');\n  }\n}\n/** Immutable class holding a blob (binary data) */\nclass Blob {\n  constructor(_delegate) {\n    this._delegate = _delegate;\n  }\n  static fromBase64String(base64) {\n    assertBase64Available();\n    return new Blob(Bytes.fromBase64String(base64));\n  }\n  static fromUint8Array(array) {\n    assertUint8ArrayAvailable();\n    return new Blob(Bytes.fromUint8Array(array));\n  }\n  toBase64() {\n    assertBase64Available();\n    return this._delegate.toBase64();\n  }\n  toUint8Array() {\n    assertUint8ArrayAvailable();\n    return this._delegate.toUint8Array();\n  }\n  isEqual(other) {\n    return this._delegate.isEqual(other._delegate);\n  }\n  toString() {\n    return 'Blob(base64: ' + this.toBase64() + ')';\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction isPartialObserver(obj) {\n  return implementsAnyMethods(obj, ['next', 'error', 'complete']);\n}\n/**\r\n * Returns true if obj is an object and contains at least one of the specified\r\n * methods.\r\n */\nfunction implementsAnyMethods(obj, methods) {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n  const object = obj;\n  for (const method of methods) {\n    if (method in object && typeof object[method] === 'function') {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * The persistence provider included with the full Firestore SDK.\r\n */\nclass IndexedDbPersistenceProvider {\n  enableIndexedDbPersistence(firestore, forceOwnership) {\n    return enableIndexedDbPersistence(firestore._delegate, {\n      forceOwnership\n    });\n  }\n  enableMultiTabIndexedDbPersistence(firestore) {\n    return enableMultiTabIndexedDbPersistence(firestore._delegate);\n  }\n  clearIndexedDbPersistence(firestore) {\n    return clearIndexedDbPersistence(firestore._delegate);\n  }\n}\n/**\r\n * Compat class for Firestore. Exposes Firestore Legacy API, but delegates\r\n * to the functional API of firestore-exp.\r\n */\nclass Firestore {\n  constructor(databaseIdOrApp, _delegate, _persistenceProvider) {\n    this._delegate = _delegate;\n    this._persistenceProvider = _persistenceProvider;\n    this.INTERNAL = {\n      delete: () => this.terminate()\n    };\n    if (!(databaseIdOrApp instanceof _DatabaseId)) {\n      this._appCompat = databaseIdOrApp;\n    }\n  }\n  get _databaseId() {\n    return this._delegate._databaseId;\n  }\n  settings(settingsLiteral) {\n    const currentSettings = this._delegate._getSettings();\n    if (!settingsLiteral.merge && currentSettings.host !== settingsLiteral.host) {\n      _logWarn('You are overriding the original host. If you did not intend ' + 'to override your settings, use {merge: true}.');\n    }\n    if (settingsLiteral.merge) {\n      settingsLiteral = Object.assign(Object.assign({}, currentSettings), settingsLiteral);\n      // Remove the property from the settings once the merge is completed\n      delete settingsLiteral.merge;\n    }\n    this._delegate._setSettings(settingsLiteral);\n  }\n  useEmulator(host, port, options = {}) {\n    connectFirestoreEmulator(this._delegate, host, port, options);\n  }\n  enableNetwork() {\n    return enableNetwork(this._delegate);\n  }\n  disableNetwork() {\n    return disableNetwork(this._delegate);\n  }\n  enablePersistence(settings) {\n    let synchronizeTabs = false;\n    let experimentalForceOwningTab = false;\n    if (settings) {\n      synchronizeTabs = !!settings.synchronizeTabs;\n      experimentalForceOwningTab = !!settings.experimentalForceOwningTab;\n      _validateIsNotUsedTogether('synchronizeTabs', synchronizeTabs, 'experimentalForceOwningTab', experimentalForceOwningTab);\n    }\n    return synchronizeTabs ? this._persistenceProvider.enableMultiTabIndexedDbPersistence(this) : this._persistenceProvider.enableIndexedDbPersistence(this, experimentalForceOwningTab);\n  }\n  clearPersistence() {\n    return this._persistenceProvider.clearIndexedDbPersistence(this);\n  }\n  terminate() {\n    if (this._appCompat) {\n      this._appCompat._removeServiceInstance('firestore-compat');\n      this._appCompat._removeServiceInstance('firestore');\n    }\n    return this._delegate._delete();\n  }\n  waitForPendingWrites() {\n    return waitForPendingWrites(this._delegate);\n  }\n  onSnapshotsInSync(arg) {\n    return onSnapshotsInSync(this._delegate, arg);\n  }\n  get app() {\n    if (!this._appCompat) {\n      throw new FirestoreError('failed-precondition', \"Firestore was not initialized using the Firebase SDK. 'app' is \" + 'not available');\n    }\n    return this._appCompat;\n  }\n  collection(pathString) {\n    try {\n      return new CollectionReference(this, collection(this._delegate, pathString));\n    } catch (e) {\n      throw replaceFunctionName(e, 'collection()', 'Firestore.collection()');\n    }\n  }\n  doc(pathString) {\n    try {\n      return new DocumentReference(this, doc(this._delegate, pathString));\n    } catch (e) {\n      throw replaceFunctionName(e, 'doc()', 'Firestore.doc()');\n    }\n  }\n  collectionGroup(collectionId) {\n    try {\n      return new Query(this, collectionGroup(this._delegate, collectionId));\n    } catch (e) {\n      throw replaceFunctionName(e, 'collectionGroup()', 'Firestore.collectionGroup()');\n    }\n  }\n  runTransaction(updateFunction) {\n    return runTransaction(this._delegate, transaction => updateFunction(new Transaction(this, transaction)));\n  }\n  batch() {\n    ensureFirestoreConfigured(this._delegate);\n    return new WriteBatch(new WriteBatch$1(this._delegate, mutations => executeWrite(this._delegate, mutations)));\n  }\n  loadBundle(bundleData) {\n    return loadBundle(this._delegate, bundleData);\n  }\n  namedQuery(name) {\n    return namedQuery(this._delegate, name).then(expQuery => {\n      if (!expQuery) {\n        return null;\n      }\n      return new Query(this,\n      // We can pass `expQuery` here directly since named queries don't have a UserDataConverter.\n      // Otherwise, we would have to create a new ExpQuery and pass the old UserDataConverter.\n      expQuery);\n    });\n  }\n}\nclass UserDataWriter extends AbstractUserDataWriter {\n  constructor(firestore) {\n    super();\n    this.firestore = firestore;\n  }\n  convertBytes(bytes) {\n    return new Blob(new Bytes(bytes));\n  }\n  convertReference(name) {\n    const key = this.convertDocumentKey(name, this.firestore._databaseId);\n    return DocumentReference.forKey(key, this.firestore, /* converter= */null);\n  }\n}\nfunction setLogLevel(level) {\n  setLogLevel$1(level);\n}\n/**\r\n * A reference to a transaction.\r\n */\nclass Transaction {\n  constructor(_firestore, _delegate) {\n    this._firestore = _firestore;\n    this._delegate = _delegate;\n    this._userDataWriter = new UserDataWriter(_firestore);\n  }\n  get(documentRef) {\n    const ref = castReference(documentRef);\n    return this._delegate.get(ref).then(result => new DocumentSnapshot(this._firestore, new DocumentSnapshot$1(this._firestore._delegate, this._userDataWriter, result._key, result._document, result.metadata, ref.converter)));\n  }\n  set(documentRef, data, options) {\n    const ref = castReference(documentRef);\n    if (options) {\n      validateSetOptions('Transaction.set', options);\n      this._delegate.set(ref, data, options);\n    } else {\n      this._delegate.set(ref, data);\n    }\n    return this;\n  }\n  update(documentRef, dataOrField, value, ...moreFieldsAndValues) {\n    const ref = castReference(documentRef);\n    if (arguments.length === 2) {\n      this._delegate.update(ref, dataOrField);\n    } else {\n      this._delegate.update(ref, dataOrField, value, ...moreFieldsAndValues);\n    }\n    return this;\n  }\n  delete(documentRef) {\n    const ref = castReference(documentRef);\n    this._delegate.delete(ref);\n    return this;\n  }\n}\nclass WriteBatch {\n  constructor(_delegate) {\n    this._delegate = _delegate;\n  }\n  set(documentRef, data, options) {\n    const ref = castReference(documentRef);\n    if (options) {\n      validateSetOptions('WriteBatch.set', options);\n      this._delegate.set(ref, data, options);\n    } else {\n      this._delegate.set(ref, data);\n    }\n    return this;\n  }\n  update(documentRef, dataOrField, value, ...moreFieldsAndValues) {\n    const ref = castReference(documentRef);\n    if (arguments.length === 2) {\n      this._delegate.update(ref, dataOrField);\n    } else {\n      this._delegate.update(ref, dataOrField, value, ...moreFieldsAndValues);\n    }\n    return this;\n  }\n  delete(documentRef) {\n    const ref = castReference(documentRef);\n    this._delegate.delete(ref);\n    return this;\n  }\n  commit() {\n    return this._delegate.commit();\n  }\n}\n/**\r\n * Wraps a `PublicFirestoreDataConverter` translating the types from the\r\n * experimental SDK into corresponding types from the Classic SDK before passing\r\n * them to the wrapped converter.\r\n */\nclass FirestoreDataConverter {\n  constructor(_firestore, _userDataWriter, _delegate) {\n    this._firestore = _firestore;\n    this._userDataWriter = _userDataWriter;\n    this._delegate = _delegate;\n  }\n  fromFirestore(snapshot, options) {\n    const expSnapshot = new QueryDocumentSnapshot$1(this._firestore._delegate, this._userDataWriter, snapshot._key, snapshot._document, snapshot.metadata, /* converter= */null);\n    return this._delegate.fromFirestore(new QueryDocumentSnapshot(this._firestore, expSnapshot), options !== null && options !== void 0 ? options : {});\n  }\n  toFirestore(modelObject, options) {\n    if (!options) {\n      return this._delegate.toFirestore(modelObject);\n    } else {\n      return this._delegate.toFirestore(modelObject, options);\n    }\n  }\n  // Use the same instance of `FirestoreDataConverter` for the given instances\n  // of `Firestore` and `PublicFirestoreDataConverter` so that isEqual() will\n  // compare equal for two objects created with the same converter instance.\n  static getInstance(firestore, converter) {\n    const converterMapByFirestore = FirestoreDataConverter.INSTANCES;\n    let untypedConverterByConverter = converterMapByFirestore.get(firestore);\n    if (!untypedConverterByConverter) {\n      untypedConverterByConverter = new WeakMap();\n      converterMapByFirestore.set(firestore, untypedConverterByConverter);\n    }\n    let instance = untypedConverterByConverter.get(converter);\n    if (!instance) {\n      instance = new FirestoreDataConverter(firestore, new UserDataWriter(firestore), converter);\n      untypedConverterByConverter.set(converter, instance);\n    }\n    return instance;\n  }\n}\nFirestoreDataConverter.INSTANCES = new WeakMap();\n/**\r\n * A reference to a particular document in a collection in the database.\r\n */\nclass DocumentReference {\n  constructor(firestore, _delegate) {\n    this.firestore = firestore;\n    this._delegate = _delegate;\n    this._userDataWriter = new UserDataWriter(firestore);\n  }\n  static forPath(path, firestore, converter) {\n    if (path.length % 2 !== 0) {\n      throw new FirestoreError('invalid-argument', 'Invalid document reference. Document ' + 'references must have an even number of segments, but ' + `${path.canonicalString()} has ${path.length}`);\n    }\n    return new DocumentReference(firestore, new DocumentReference$1(firestore._delegate, converter, new _DocumentKey(path)));\n  }\n  static forKey(key, firestore, converter) {\n    return new DocumentReference(firestore, new DocumentReference$1(firestore._delegate, converter, key));\n  }\n  get id() {\n    return this._delegate.id;\n  }\n  get parent() {\n    return new CollectionReference(this.firestore, this._delegate.parent);\n  }\n  get path() {\n    return this._delegate.path;\n  }\n  collection(pathString) {\n    try {\n      return new CollectionReference(this.firestore, collection(this._delegate, pathString));\n    } catch (e) {\n      throw replaceFunctionName(e, 'collection()', 'DocumentReference.collection()');\n    }\n  }\n  isEqual(other) {\n    other = getModularInstance(other);\n    if (!(other instanceof DocumentReference$1)) {\n      return false;\n    }\n    return refEqual(this._delegate, other);\n  }\n  set(value, options) {\n    options = validateSetOptions('DocumentReference.set', options);\n    try {\n      if (options) {\n        return setDoc(this._delegate, value, options);\n      } else {\n        return setDoc(this._delegate, value);\n      }\n    } catch (e) {\n      throw replaceFunctionName(e, 'setDoc()', 'DocumentReference.set()');\n    }\n  }\n  update(fieldOrUpdateData, value, ...moreFieldsAndValues) {\n    try {\n      if (arguments.length === 1) {\n        return updateDoc(this._delegate, fieldOrUpdateData);\n      } else {\n        return updateDoc(this._delegate, fieldOrUpdateData, value, ...moreFieldsAndValues);\n      }\n    } catch (e) {\n      throw replaceFunctionName(e, 'updateDoc()', 'DocumentReference.update()');\n    }\n  }\n  delete() {\n    return deleteDoc(this._delegate);\n  }\n  onSnapshot(...args) {\n    const options = extractSnapshotOptions(args);\n    const observer = wrapObserver(args, result => new DocumentSnapshot(this.firestore, new DocumentSnapshot$1(this.firestore._delegate, this._userDataWriter, result._key, result._document, result.metadata, this._delegate.converter)));\n    return onSnapshot(this._delegate, options, observer);\n  }\n  get(options) {\n    let snap;\n    if ((options === null || options === void 0 ? void 0 : options.source) === 'cache') {\n      snap = getDocFromCache(this._delegate);\n    } else if ((options === null || options === void 0 ? void 0 : options.source) === 'server') {\n      snap = getDocFromServer(this._delegate);\n    } else {\n      snap = getDoc(this._delegate);\n    }\n    return snap.then(result => new DocumentSnapshot(this.firestore, new DocumentSnapshot$1(this.firestore._delegate, this._userDataWriter, result._key, result._document, result.metadata, this._delegate.converter)));\n  }\n  withConverter(converter) {\n    return new DocumentReference(this.firestore, converter ? this._delegate.withConverter(FirestoreDataConverter.getInstance(this.firestore, converter)) : this._delegate.withConverter(null));\n  }\n}\n/**\r\n * Replaces the function name in an error thrown by the firestore-exp API\r\n * with the function names used in the classic API.\r\n */\nfunction replaceFunctionName(e, original, updated) {\n  e.message = e.message.replace(original, updated);\n  return e;\n}\n/**\r\n * Iterates the list of arguments from an `onSnapshot` call and returns the\r\n * first argument that may be an `SnapshotListenOptions` object. Returns an\r\n * empty object if none is found.\r\n */\nfunction extractSnapshotOptions(args) {\n  for (const arg of args) {\n    if (typeof arg === 'object' && !isPartialObserver(arg)) {\n      return arg;\n    }\n  }\n  return {};\n}\n/**\r\n * Creates an observer that can be passed to the firestore-exp SDK. The\r\n * observer converts all observed values into the format expected by the classic\r\n * SDK.\r\n *\r\n * @param args - The list of arguments from an `onSnapshot` call.\r\n * @param wrapper - The function that converts the firestore-exp type into the\r\n * type used by this shim.\r\n */\nfunction wrapObserver(args, wrapper) {\n  var _a, _b;\n  let userObserver;\n  if (isPartialObserver(args[0])) {\n    userObserver = args[0];\n  } else if (isPartialObserver(args[1])) {\n    userObserver = args[1];\n  } else if (typeof args[0] === 'function') {\n    userObserver = {\n      next: args[0],\n      error: args[1],\n      complete: args[2]\n    };\n  } else {\n    userObserver = {\n      next: args[1],\n      error: args[2],\n      complete: args[3]\n    };\n  }\n  return {\n    next: val => {\n      if (userObserver.next) {\n        userObserver.next(wrapper(val));\n      }\n    },\n    error: (_a = userObserver.error) === null || _a === void 0 ? void 0 : _a.bind(userObserver),\n    complete: (_b = userObserver.complete) === null || _b === void 0 ? void 0 : _b.bind(userObserver)\n  };\n}\nclass DocumentSnapshot {\n  constructor(_firestore, _delegate) {\n    this._firestore = _firestore;\n    this._delegate = _delegate;\n  }\n  get ref() {\n    return new DocumentReference(this._firestore, this._delegate.ref);\n  }\n  get id() {\n    return this._delegate.id;\n  }\n  get metadata() {\n    return this._delegate.metadata;\n  }\n  get exists() {\n    return this._delegate.exists();\n  }\n  data(options) {\n    return this._delegate.data(options);\n  }\n  get(fieldPath, options\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ) {\n    return this._delegate.get(fieldPath, options);\n  }\n  isEqual(other) {\n    return snapshotEqual(this._delegate, other._delegate);\n  }\n}\nclass QueryDocumentSnapshot extends DocumentSnapshot {\n  data(options) {\n    const data = this._delegate.data(options);\n    if (this._delegate._converter) {\n      // Undefined is a possible valid value from converter.\n      return data;\n    } else {\n      _debugAssert(data !== undefined, 'Document in a QueryDocumentSnapshot should exist');\n      return data;\n    }\n  }\n}\nclass Query {\n  constructor(firestore, _delegate) {\n    this.firestore = firestore;\n    this._delegate = _delegate;\n    this._userDataWriter = new UserDataWriter(firestore);\n  }\n  where(fieldPath, opStr, value) {\n    try {\n      // The \"as string\" cast is a little bit of a hack. `where` accepts the\n      // FieldPath Compat type as input, but is not typed as such in order to\n      // not expose this via our public typings file.\n      return new Query(this.firestore, query(this._delegate, where(fieldPath, opStr, value)));\n    } catch (e) {\n      throw replaceFunctionName(e, /(orderBy|where)\\(\\)/, 'Query.$1()');\n    }\n  }\n  orderBy(fieldPath, directionStr) {\n    try {\n      // The \"as string\" cast is a little bit of a hack. `orderBy` accepts the\n      // FieldPath Compat type as input, but is not typed as such in order to\n      // not expose this via our public typings file.\n      return new Query(this.firestore, query(this._delegate, orderBy(fieldPath, directionStr)));\n    } catch (e) {\n      throw replaceFunctionName(e, /(orderBy|where)\\(\\)/, 'Query.$1()');\n    }\n  }\n  limit(n) {\n    try {\n      return new Query(this.firestore, query(this._delegate, limit(n)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'limit()', 'Query.limit()');\n    }\n  }\n  limitToLast(n) {\n    try {\n      return new Query(this.firestore, query(this._delegate, limitToLast(n)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'limitToLast()', 'Query.limitToLast()');\n    }\n  }\n  startAt(...args) {\n    try {\n      return new Query(this.firestore, query(this._delegate, startAt(...args)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'startAt()', 'Query.startAt()');\n    }\n  }\n  startAfter(...args) {\n    try {\n      return new Query(this.firestore, query(this._delegate, startAfter(...args)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'startAfter()', 'Query.startAfter()');\n    }\n  }\n  endBefore(...args) {\n    try {\n      return new Query(this.firestore, query(this._delegate, endBefore(...args)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'endBefore()', 'Query.endBefore()');\n    }\n  }\n  endAt(...args) {\n    try {\n      return new Query(this.firestore, query(this._delegate, endAt(...args)));\n    } catch (e) {\n      throw replaceFunctionName(e, 'endAt()', 'Query.endAt()');\n    }\n  }\n  isEqual(other) {\n    return queryEqual(this._delegate, other._delegate);\n  }\n  get(options) {\n    let query;\n    if ((options === null || options === void 0 ? void 0 : options.source) === 'cache') {\n      query = getDocsFromCache(this._delegate);\n    } else if ((options === null || options === void 0 ? void 0 : options.source) === 'server') {\n      query = getDocsFromServer(this._delegate);\n    } else {\n      query = getDocs(this._delegate);\n    }\n    return query.then(result => new QuerySnapshot(this.firestore, new QuerySnapshot$1(this.firestore._delegate, this._userDataWriter, this._delegate, result._snapshot)));\n  }\n  onSnapshot(...args) {\n    const options = extractSnapshotOptions(args);\n    const observer = wrapObserver(args, snap => new QuerySnapshot(this.firestore, new QuerySnapshot$1(this.firestore._delegate, this._userDataWriter, this._delegate, snap._snapshot)));\n    return onSnapshot(this._delegate, options, observer);\n  }\n  withConverter(converter) {\n    return new Query(this.firestore, converter ? this._delegate.withConverter(FirestoreDataConverter.getInstance(this.firestore, converter)) : this._delegate.withConverter(null));\n  }\n}\nclass DocumentChange {\n  constructor(_firestore, _delegate) {\n    this._firestore = _firestore;\n    this._delegate = _delegate;\n  }\n  get type() {\n    return this._delegate.type;\n  }\n  get doc() {\n    return new QueryDocumentSnapshot(this._firestore, this._delegate.doc);\n  }\n  get oldIndex() {\n    return this._delegate.oldIndex;\n  }\n  get newIndex() {\n    return this._delegate.newIndex;\n  }\n}\nclass QuerySnapshot {\n  constructor(_firestore, _delegate) {\n    this._firestore = _firestore;\n    this._delegate = _delegate;\n  }\n  get query() {\n    return new Query(this._firestore, this._delegate.query);\n  }\n  get metadata() {\n    return this._delegate.metadata;\n  }\n  get size() {\n    return this._delegate.size;\n  }\n  get empty() {\n    return this._delegate.empty;\n  }\n  get docs() {\n    return this._delegate.docs.map(doc => new QueryDocumentSnapshot(this._firestore, doc));\n  }\n  docChanges(options) {\n    return this._delegate.docChanges(options).map(docChange => new DocumentChange(this._firestore, docChange));\n  }\n  forEach(callback, thisArg) {\n    this._delegate.forEach(snapshot => {\n      callback.call(thisArg, new QueryDocumentSnapshot(this._firestore, snapshot));\n    });\n  }\n  isEqual(other) {\n    return snapshotEqual(this._delegate, other._delegate);\n  }\n}\nclass CollectionReference extends Query {\n  constructor(firestore, _delegate) {\n    super(firestore, _delegate);\n    this.firestore = firestore;\n    this._delegate = _delegate;\n  }\n  get id() {\n    return this._delegate.id;\n  }\n  get path() {\n    return this._delegate.path;\n  }\n  get parent() {\n    const docRef = this._delegate.parent;\n    return docRef ? new DocumentReference(this.firestore, docRef) : null;\n  }\n  doc(documentPath) {\n    try {\n      if (documentPath === undefined) {\n        // Call `doc` without `documentPath` if `documentPath` is `undefined`\n        // as `doc` validates the number of arguments to prevent users from\n        // accidentally passing `undefined`.\n        return new DocumentReference(this.firestore, doc(this._delegate));\n      } else {\n        return new DocumentReference(this.firestore, doc(this._delegate, documentPath));\n      }\n    } catch (e) {\n      throw replaceFunctionName(e, 'doc()', 'CollectionReference.doc()');\n    }\n  }\n  add(data) {\n    return addDoc(this._delegate, data).then(docRef => new DocumentReference(this.firestore, docRef));\n  }\n  isEqual(other) {\n    return refEqual(this._delegate, other._delegate);\n  }\n  withConverter(converter) {\n    return new CollectionReference(this.firestore, converter ? this._delegate.withConverter(FirestoreDataConverter.getInstance(this.firestore, converter)) : this._delegate.withConverter(null));\n  }\n}\nfunction castReference(documentRef) {\n  return _cast(documentRef, DocumentReference$1);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// The objects that are a part of this API are exposed to third-parties as\n// compiled javascript so we want to flag our private members with a leading\n// underscore to discourage their use.\n/**\r\n * A `FieldPath` refers to a field in a document. The path may consist of a\r\n * single field name (referring to a top-level field in the document), or a list\r\n * of field names (referring to a nested field in the document).\r\n */\nclass FieldPath {\n  /**\r\n   * Creates a FieldPath from the provided field names. If more than one field\r\n   * name is provided, the path will point to a nested field in a document.\r\n   *\r\n   * @param fieldNames - A list of field names.\r\n   */\n  constructor(...fieldNames) {\n    this._delegate = new FieldPath$1(...fieldNames);\n  }\n  static documentId() {\n    /**\r\n     * Internal Note: The backend doesn't technically support querying by\r\n     * document ID. Instead it queries by the entire document name (full path\r\n     * included), but in the cases we currently support documentId(), the net\r\n     * effect is the same.\r\n     */\n    return new FieldPath(_FieldPath.keyField().canonicalString());\n  }\n  isEqual(other) {\n    other = getModularInstance(other);\n    if (!(other instanceof FieldPath$1)) {\n      return false;\n    }\n    return this._delegate._internalPath.isEqual(other._internalPath);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nclass FieldValue {\n  constructor(_delegate) {\n    this._delegate = _delegate;\n  }\n  static serverTimestamp() {\n    const delegate = serverTimestamp();\n    delegate._methodName = 'FieldValue.serverTimestamp';\n    return new FieldValue(delegate);\n  }\n  static delete() {\n    const delegate = deleteField();\n    delegate._methodName = 'FieldValue.delete';\n    return new FieldValue(delegate);\n  }\n  static arrayUnion(...elements) {\n    const delegate = arrayUnion(...elements);\n    delegate._methodName = 'FieldValue.arrayUnion';\n    return new FieldValue(delegate);\n  }\n  static arrayRemove(...elements) {\n    const delegate = arrayRemove(...elements);\n    delegate._methodName = 'FieldValue.arrayRemove';\n    return new FieldValue(delegate);\n  }\n  static increment(n) {\n    const delegate = increment(n);\n    delegate._methodName = 'FieldValue.increment';\n    return new FieldValue(delegate);\n  }\n  isEqual(other) {\n    return this._delegate.isEqual(other._delegate);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst firestoreNamespace = {\n  Firestore,\n  GeoPoint,\n  Timestamp,\n  Blob,\n  Transaction,\n  WriteBatch,\n  DocumentReference,\n  DocumentSnapshot,\n  Query,\n  QueryDocumentSnapshot,\n  QuerySnapshot,\n  CollectionReference,\n  FieldPath,\n  FieldValue,\n  setLogLevel,\n  CACHE_SIZE_UNLIMITED\n};\n/**\r\n * Configures Firestore as part of the Firebase SDK by calling registerComponent.\r\n *\r\n * @param firebase - The FirebaseNamespace to register Firestore with\r\n * @param firestoreFactory - A factory function that returns a new Firestore\r\n *    instance.\r\n */\nfunction configureForFirebase(firebase, firestoreFactory) {\n  firebase.INTERNAL.registerComponent(new Component('firestore-compat', container => {\n    const app = container.getProvider('app-compat').getImmediate();\n    const firestoreExp = container.getProvider('firestore').getImmediate();\n    return firestoreFactory(app, firestoreExp);\n  }, 'PUBLIC').setServiceProps(Object.assign({}, firestoreNamespace)));\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Registers the main Firestore build with the components framework.\r\n * Persistence can be enabled via `firebase.firestore().enablePersistence()`.\r\n */\nfunction registerFirestore(instance) {\n  configureForFirebase(instance, (app, firestoreExp) => new Firestore(app, firestoreExp, new IndexedDbPersistenceProvider()));\n  instance.registerVersion(name, version);\n}\nregisterFirestore(firebase);\nexport { registerFirestore };\n", "import { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1 from '@angular/fire';\nimport { keepUnstableUntilFirst, VERSION } from '@angular/fire';\nimport * as i3 from '@angular/fire/app-check';\nimport { ɵfirebaseAppFactory as _firebaseAppFactory, ɵcacheInstance as _cacheInstance, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire/compat';\nimport * as i2 from '@angular/fire/compat/auth';\nimport { ɵauthFactory as _authFactory, USE_EMULATOR as USE_EMULATOR$1, SETTINGS as SETTINGS$1, TENANT_ID, LANGUAGE_CODE, USE_DEVICE_LANGUAGE, PERSISTENCE } from '@angular/fire/compat/auth';\nimport { Observable, asyncScheduler, from, of } from 'rxjs';\nimport { startWith, pairwise, map, scan, distinctUntilChanged, filter } from 'rxjs/operators';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport firebase from 'firebase/compat/app';\nfunction _fromRef(ref, scheduler = asyncScheduler) {\n  return new Observable(subscriber => {\n    let unsubscribe;\n    if (scheduler != null) {\n      scheduler.schedule(() => {\n        unsubscribe = ref.onSnapshot({\n          includeMetadataChanges: true\n        }, subscriber);\n      });\n    } else {\n      unsubscribe = ref.onSnapshot({\n        includeMetadataChanges: true\n      }, subscriber);\n    }\n    return () => {\n      if (unsubscribe != null) {\n        unsubscribe();\n      }\n    };\n  });\n}\nfunction fromRef(ref, scheduler) {\n  return _fromRef(ref, scheduler);\n}\nfunction fromDocRef(ref, scheduler) {\n  return fromRef(ref, scheduler).pipe(startWith(undefined), pairwise(), map(snapshots => {\n    const [priorPayload, payload] = snapshots;\n    if (!payload.exists) {\n      return {\n        payload,\n        type: 'removed'\n      };\n    }\n    if (!priorPayload?.exists) {\n      return {\n        payload,\n        type: 'added'\n      };\n    }\n    return {\n      payload,\n      type: 'modified'\n    };\n  }));\n}\nfunction fromCollectionRef(ref, scheduler) {\n  return fromRef(ref, scheduler).pipe(map(payload => ({\n    payload,\n    type: 'query'\n  })));\n}\n\n/**\n * AngularFirestoreDocument service\n *\n * This class creates a reference to a Firestore Document. A reference is provided in\n * in the constructor. The class is generic which gives you type safety for data update\n * methods and data streaming.\n *\n * This class uses Symbol.observable to transform into Observable using Observable.from().\n *\n * This class is rarely used directly and should be created from the AngularFirestore service.\n *\n * Example:\n *\n * const fakeStock = new AngularFirestoreDocument<Stock>(doc('stocks/FAKE'));\n * await fakeStock.set({ name: 'FAKE', price: 0.01 });\n * fakeStock.valueChanges().map(snap => {\n *   if(snap.exists) return snap.data();\n *   return null;\n * }).subscribe(value => console.log(value));\n * // OR! Transform using Observable.from() and the data is unwrapped for you\n * Observable.from(fakeStock).subscribe(value => console.log(value));\n */\nclass AngularFirestoreDocument {\n  ref;\n  afs;\n  /**\n   * The constructor takes in a DocumentReference to provide wrapper methods\n   * for data operations, data streaming, and Symbol.observable.\n   */\n  constructor(ref, afs) {\n    this.ref = ref;\n    this.afs = afs;\n  }\n  /**\n   * Create or overwrite a single document.\n   */\n  set(data, options) {\n    return this.ref.set(data, options);\n  }\n  /**\n   * Update some fields of a document without overwriting the entire document.\n   */\n  update(data) {\n    return this.ref.update(data);\n  }\n  /**\n   * Delete a document.\n   */\n  delete() {\n    return this.ref.delete();\n  }\n  /**\n   * Create a reference to a sub-collection given a path and an optional query\n   * function.\n   */\n  collection(path, queryFn) {\n    const collectionRef = this.ref.collection(path);\n    const {\n      ref,\n      query\n    } = associateQuery(collectionRef, queryFn);\n    return new AngularFirestoreCollection(ref, query, this.afs);\n  }\n  /**\n   * Listen to snapshot updates from the document.\n   */\n  snapshotChanges() {\n    const scheduledFromDocRef$ = fromDocRef(this.ref, this.afs.schedulers.outsideAngular);\n    return scheduledFromDocRef$.pipe(keepUnstableUntilFirst);\n  }\n  valueChanges(options = {}) {\n    return this.snapshotChanges().pipe(map(({\n      payload\n    }) => options.idField ? {\n      ...payload.data(),\n      ...{\n        [options.idField]: payload.id\n      }\n    } : payload.data()));\n  }\n  /**\n   * Retrieve the document once.\n   */\n  get(options) {\n    return from(this.ref.get(options)).pipe(keepUnstableUntilFirst);\n  }\n}\n\n/**\n * Return a stream of document changes on a query. These results are not in sort order but in\n * order of occurence.\n */\nfunction docChanges(query, scheduler) {\n  return fromCollectionRef(query, scheduler).pipe(startWith(undefined), pairwise(), map(actionTuple => {\n    const [priorAction, action] = actionTuple;\n    const docChanges = action.payload.docChanges();\n    const actions = docChanges.map(change => ({\n      type: change.type,\n      payload: change\n    }));\n    // the metadata has changed from the prior emission\n    if (priorAction && JSON.stringify(priorAction.payload.metadata) !== JSON.stringify(action.payload.metadata)) {\n      // go through all the docs in payload and figure out which ones changed\n      action.payload.docs.forEach((currentDoc, currentIndex) => {\n        const docChange = docChanges.find(d => d.doc.ref.isEqual(currentDoc.ref));\n        const priorDoc = priorAction?.payload.docs.find(d => d.ref.isEqual(currentDoc.ref));\n        if (docChange && JSON.stringify(docChange.doc.metadata) === JSON.stringify(currentDoc.metadata) || !docChange && priorDoc && JSON.stringify(priorDoc.metadata) === JSON.stringify(currentDoc.metadata)) {\n          // document doesn't appear to have changed, don't log another action\n        } else {\n          // since the actions are processed in order just push onto the array\n          actions.push({\n            type: 'modified',\n            payload: {\n              oldIndex: currentIndex,\n              newIndex: currentIndex,\n              type: 'modified',\n              doc: currentDoc\n            }\n          });\n        }\n      });\n    }\n    return actions;\n  }));\n}\n/**\n * Return a stream of document changes on a query. These results are in sort order.\n */\nfunction sortedChanges(query, events, scheduler) {\n  return docChanges(query, scheduler).pipe(scan((current, changes) => combineChanges(current, changes.map(it => it.payload), events), []), distinctUntilChanged(),\n  // cut down on unneed change cycles\n  map(changes => changes.map(c => ({\n    type: c.type,\n    payload: c\n  }))));\n}\n/**\n * Combines the total result set from the current set of changes from an incoming set\n * of changes.\n */\nfunction combineChanges(current, changes, events) {\n  changes.forEach(change => {\n    // skip unwanted change types\n    if (events.indexOf(change.type) > -1) {\n      current = combineChange(current, change);\n    }\n  });\n  return current;\n}\n/**\n * Splice arguments on top of a sliced array, to break top-level ===\n * this is useful for change-detection\n */\nfunction sliceAndSplice(original, start, deleteCount, ...args) {\n  const returnArray = original.slice();\n  returnArray.splice(start, deleteCount, ...args);\n  return returnArray;\n}\n/**\n * Creates a new sorted array from a new change.\n * Build our own because we allow filtering of action types ('added', 'removed', 'modified') before scanning\n * and so we have greater control over change detection (by breaking ===)\n */\nfunction combineChange(combined, change) {\n  switch (change.type) {\n    case 'added':\n      if (combined[change.newIndex] && combined[change.newIndex].doc.ref.isEqual(change.doc.ref)) {\n        // Not sure why the duplicates are getting fired\n      } else {\n        return sliceAndSplice(combined, change.newIndex, 0, change);\n      }\n      break;\n    case 'modified':\n      if (combined[change.oldIndex] == null || combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\n        // When an item changes position we first remove it\n        // and then add it's new position\n        if (change.oldIndex !== change.newIndex) {\n          const copiedArray = combined.slice();\n          copiedArray.splice(change.oldIndex, 1);\n          copiedArray.splice(change.newIndex, 0, change);\n          return copiedArray;\n        } else {\n          return sliceAndSplice(combined, change.newIndex, 1, change);\n        }\n      }\n      break;\n    case 'removed':\n      if (combined[change.oldIndex] && combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\n        return sliceAndSplice(combined, change.oldIndex, 1);\n      }\n      break;\n  }\n  return combined;\n}\nfunction validateEventsArray(events) {\n  if (!events || events.length === 0) {\n    events = ['added', 'removed', 'modified'];\n  }\n  return events;\n}\n/**\n * AngularFirestoreCollection service\n *\n * This class creates a reference to a Firestore Collection. A reference and a query are provided in\n * in the constructor. The query can be the unqueried reference if no query is desired.The class\n * is generic which gives you type safety for data update methods and data streaming.\n *\n * This class uses Symbol.observable to transform into Observable using Observable.from().\n *\n * This class is rarely used directly and should be created from the AngularFirestore service.\n *\n * Example:\n *\n * const collectionRef = firebase.firestore.collection('stocks');\n * const query = collectionRef.where('price', '>', '0.01');\n * const fakeStock = new AngularFirestoreCollection<Stock>(collectionRef, query);\n *\n * // NOTE!: the updates are performed on the reference not the query\n * await fakeStock.add({ name: 'FAKE', price: 0.01 });\n *\n * // Subscribe to changes as snapshots. This provides you data updates as well as delta updates.\n * fakeStock.valueChanges().subscribe(value => console.log(value));\n */\nclass AngularFirestoreCollection {\n  ref;\n  query;\n  afs;\n  /**\n   * The constructor takes in a CollectionReference and Query to provide wrapper methods\n   * for data operations and data streaming.\n   *\n   * Note: Data operation methods are done on the reference not the query. This means\n   * when you update data it is not updating data to the window of your query unless\n   * the data fits the criteria of the query. See the AssociatedRefence type for details\n   * on this implication.\n   */\n  constructor(ref, query, afs) {\n    this.ref = ref;\n    this.query = query;\n    this.afs = afs;\n  }\n  /**\n   * Listen to the latest change in the stream. This method returns changes\n   * as they occur and they are not sorted by query order. This allows you to construct\n   * your own data structure.\n   */\n  stateChanges(events) {\n    let source = docChanges(this.query, this.afs.schedulers.outsideAngular);\n    if (events && events.length > 0) {\n      source = source.pipe(map(actions => actions.filter(change => events.indexOf(change.type) > -1)));\n    }\n    return source.pipe(\n    // We want to filter out empty arrays, but always emit at first, so the developer knows\n    // that the collection has been resolve; even if it's empty\n    startWith(undefined), pairwise(), filter(([prior, current]) => current.length > 0 || !prior), map(([, current]) => current), keepUnstableUntilFirst);\n  }\n  /**\n   * Create a stream of changes as they occur it time. This method is similar to stateChanges()\n   * but it collects each event in an array over time.\n   */\n  auditTrail(events) {\n    return this.stateChanges(events).pipe(scan((current, action) => [...current, ...action], []));\n  }\n  /**\n   * Create a stream of synchronized changes. This method keeps the local array in sorted\n   * query order.\n   */\n  snapshotChanges(events) {\n    const validatedEvents = validateEventsArray(events);\n    const scheduledSortedChanges$ = sortedChanges(this.query, validatedEvents, this.afs.schedulers.outsideAngular);\n    return scheduledSortedChanges$.pipe(keepUnstableUntilFirst);\n  }\n  valueChanges(options = {}) {\n    return fromCollectionRef(this.query, this.afs.schedulers.outsideAngular).pipe(map(actions => actions.payload.docs.map(a => {\n      if (options.idField) {\n        return {\n          ...a.data(),\n          ...{\n            [options.idField]: a.id\n          }\n        };\n      } else {\n        return a.data();\n      }\n    })), keepUnstableUntilFirst);\n  }\n  /**\n   * Retrieve the results of the query once.\n   */\n  get(options) {\n    return from(this.query.get(options)).pipe(keepUnstableUntilFirst);\n  }\n  /**\n   * Add data to a collection reference.\n   *\n   * Note: Data operation methods are done on the reference not the query. This means\n   * when you update data it is not updating data to the window of your query unless\n   * the data fits the criteria of the query.\n   */\n  add(data) {\n    return this.ref.add(data);\n  }\n  /**\n   * Create a reference to a single document in a collection.\n   */\n  doc(path) {\n    // TODO is there a better way to solve this type issue\n    return new AngularFirestoreDocument(this.ref.doc(path), this.afs);\n  }\n}\n\n/**\n * AngularFirestoreCollectionGroup service\n *\n * This class holds a reference to a Firestore Collection Group Query.\n *\n * This class uses Symbol.observable to transform into Observable using Observable.from().\n *\n * This class is rarely used directly and should be created from the AngularFirestore service.\n *\n * Example:\n *\n * const collectionGroup = firebase.firestore.collectionGroup('stocks');\n * const query = collectionRef.where('price', '>', '0.01');\n * const fakeStock = new AngularFirestoreCollectionGroup<Stock>(query, afs);\n *\n * // Subscribe to changes as snapshots. This provides you data updates as well as delta updates.\n * fakeStock.valueChanges().subscribe(value => console.log(value));\n */\nclass AngularFirestoreCollectionGroup {\n  query;\n  afs;\n  /**\n   * The constructor takes in a CollectionGroupQuery to provide wrapper methods\n   * for data operations and data streaming.\n   */\n  constructor(query, afs) {\n    this.query = query;\n    this.afs = afs;\n  }\n  /**\n   * Listen to the latest change in the stream. This method returns changes\n   * as they occur and they are not sorted by query order. This allows you to construct\n   * your own data structure.\n   */\n  stateChanges(events) {\n    if (!events || events.length === 0) {\n      return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(keepUnstableUntilFirst);\n    }\n    return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(map(actions => actions.filter(change => events.indexOf(change.type) > -1)), filter(changes => changes.length > 0), keepUnstableUntilFirst);\n  }\n  /**\n   * Create a stream of changes as they occur it time. This method is similar to stateChanges()\n   * but it collects each event in an array over time.\n   */\n  auditTrail(events) {\n    return this.stateChanges(events).pipe(scan((current, action) => [...current, ...action], []));\n  }\n  /**\n   * Create a stream of synchronized changes. This method keeps the local array in sorted\n   * query order.\n   */\n  snapshotChanges(events) {\n    const validatedEvents = validateEventsArray(events);\n    const scheduledSortedChanges$ = sortedChanges(this.query, validatedEvents, this.afs.schedulers.outsideAngular);\n    return scheduledSortedChanges$.pipe(keepUnstableUntilFirst);\n  }\n  valueChanges(options = {}) {\n    const fromCollectionRefScheduled$ = fromCollectionRef(this.query, this.afs.schedulers.outsideAngular);\n    return fromCollectionRefScheduled$.pipe(map(actions => actions.payload.docs.map(a => {\n      if (options.idField) {\n        return {\n          [options.idField]: a.id,\n          ...a.data()\n        };\n      } else {\n        return a.data();\n      }\n    })), keepUnstableUntilFirst);\n  }\n  /**\n   * Retrieve the results of the query once.\n   */\n  get(options) {\n    return from(this.query.get(options)).pipe(keepUnstableUntilFirst);\n  }\n}\n\n/**\n * The value of this token determines whether or not the firestore will have persistance enabled\n */\nconst ENABLE_PERSISTENCE = new InjectionToken('angularfire2.enableFirestorePersistence');\nconst PERSISTENCE_SETTINGS = new InjectionToken('angularfire2.firestore.persistenceSettings');\nconst SETTINGS = new InjectionToken('angularfire2.firestore.settings');\nconst USE_EMULATOR = new InjectionToken('angularfire2.firestore.use-emulator');\n/**\n * A utility methods for associating a collection reference with\n * a query.\n *\n * @param collectionRef - A collection reference to query\n * @param queryFn - The callback to create a query\n *\n * Example:\n * const { query, ref } = associateQuery(docRef.collection('items'), ref => {\n *  return ref.where('age', '<', 200);\n * });\n */\nfunction associateQuery(collectionRef, queryFn = ref => ref) {\n  const query = queryFn(collectionRef);\n  const ref = collectionRef;\n  return {\n    query,\n    ref\n  };\n}\n/**\n * AngularFirestore Service\n *\n * This service is the main entry point for this feature module. It provides\n * an API for creating Collection and Reference services. These services can\n * then be used to do data updates and observable streams of the data.\n *\n * Example:\n *\n * import { Component } from '@angular/core';\n * import { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from '@angular/fire/firestore';\n * import { Observable } from 'rxjs/Observable';\n * import { from } from 'rxjs/observable';\n *\n * @Component({\n *   selector: 'app-my-component',\n *   template: `\n *    <h2>Items for {{ (profile | async)?.name }}\n *    <ul>\n *       <li *ngFor=\"let item of items | async\">{{ item.name }}</li>\n *    </ul>\n *    <div class=\"control-input\">\n *       <input type=\"text\" #itemname />\n *       <button (click)=\"addItem(itemname.value)\">Add Item</button>\n *    </div>\n *   `\n * })\n * export class MyComponent implements OnInit {\n *\n *   // services for data operations and data streaming\n *   private readonly itemsRef: AngularFirestoreCollection<Item>;\n *   private readonly profileRef: AngularFirestoreDocument<Profile>;\n *\n *   // observables for template\n *   items: Observable<Item[]>;\n *   profile: Observable<Profile>;\n *\n *   // inject main service\n *   constructor(private readonly afs: AngularFirestore) {}\n *\n *   ngOnInit() {\n *     this.itemsRef = afs.collection('items', ref => ref.where('user', '==', 'davideast').limit(10));\n *     this.items = this.itemsRef.valueChanges().map(snap => snap.docs.map(data => doc.data()));\n *     // this.items = from(this.itemsRef); // you can also do this with no mapping\n *\n *     this.profileRef = afs.doc('users/davideast');\n *     this.profile = this.profileRef.valueChanges();\n *   }\n *\n *   addItem(name: string) {\n *     const user = 'davideast';\n *     this.itemsRef.add({ name, user });\n *   }\n * }\n */\nclass AngularFirestore {\n  schedulers;\n  firestore;\n  persistenceEnabled$;\n  /**\n   * Each Feature of AngularFire has a FirebaseApp injected. This way we\n   * don't rely on the main Firebase App instance and we can create named\n   * apps and use multiple apps.\n   */\n  constructor(options, name, shouldEnablePersistence, settings,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  platformId, zone, schedulers, persistenceSettings, _useEmulator, auth, useAuthEmulator, authSettings,\n  // can't use firebase.auth.AuthSettings here\n  tenantId, languageCode, useDeviceLanguage, persistence, _appCheckInstances) {\n    this.schedulers = schedulers;\n    const app = _firebaseAppFactory(options, zone, name);\n    const useEmulator = _useEmulator;\n    if (auth) {\n      _authFactory(app, zone, useAuthEmulator, tenantId, languageCode, useDeviceLanguage, authSettings, persistence);\n    }\n    [this.firestore, this.persistenceEnabled$] = _cacheInstance(`${app.name}.firestore`, 'AngularFirestore', app.name, () => {\n      const firestore = zone.runOutsideAngular(() => app.firestore());\n      if (settings) {\n        firestore.settings(settings);\n      }\n      if (useEmulator) {\n        firestore.useEmulator(...useEmulator);\n      }\n      if (shouldEnablePersistence && !isPlatformServer(platformId)) {\n        // We need to try/catch here because not all enablePersistence() failures are caught\n        // https://github.com/firebase/firebase-js-sdk/issues/608\n        const enablePersistence = () => {\n          try {\n            return from(firestore.enablePersistence(persistenceSettings || undefined).then(() => true, () => false));\n          } catch (e) {\n            if (typeof console !== 'undefined') {\n              console.warn(e);\n            }\n            return of(false);\n          }\n        };\n        return [firestore, zone.runOutsideAngular(enablePersistence)];\n      } else {\n        return [firestore, of(false)];\n      }\n    }, [settings, useEmulator, shouldEnablePersistence]);\n  }\n  collection(pathOrRef, queryFn) {\n    let collectionRef;\n    if (typeof pathOrRef === 'string') {\n      collectionRef = this.firestore.collection(pathOrRef);\n    } else {\n      collectionRef = pathOrRef;\n    }\n    const {\n      ref,\n      query\n    } = associateQuery(collectionRef, queryFn);\n    const refInZone = this.schedulers.ngZone.run(() => ref);\n    return new AngularFirestoreCollection(refInZone, query, this);\n  }\n  /**\n   * Create a reference to a Firestore Collection Group based on a collectionId\n   * and an optional query function to narrow the result\n   * set.\n   */\n  collectionGroup(collectionId, queryGroupFn) {\n    const queryFn = queryGroupFn || (ref => ref);\n    const collectionGroup = this.firestore.collectionGroup(collectionId);\n    return new AngularFirestoreCollectionGroup(queryFn(collectionGroup), this);\n  }\n  doc(pathOrRef) {\n    let ref;\n    if (typeof pathOrRef === 'string') {\n      ref = this.firestore.doc(pathOrRef);\n    } else {\n      ref = pathOrRef;\n    }\n    const refInZone = this.schedulers.ngZone.run(() => ref);\n    return new AngularFirestoreDocument(refInZone, this);\n  }\n  /**\n   * Returns a generated Firestore Document Id.\n   */\n  createId() {\n    return this.firestore.collection('_').doc().id;\n  }\n  static ɵfac = function AngularFirestore_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularFirestore)(i0.ɵɵinject(FIREBASE_OPTIONS), i0.ɵɵinject(FIREBASE_APP_NAME, 8), i0.ɵɵinject(ENABLE_PERSISTENCE, 8), i0.ɵɵinject(SETTINGS, 8), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.ɵAngularFireSchedulers), i0.ɵɵinject(PERSISTENCE_SETTINGS, 8), i0.ɵɵinject(USE_EMULATOR, 8), i0.ɵɵinject(i2.AngularFireAuth, 8), i0.ɵɵinject(USE_EMULATOR$1, 8), i0.ɵɵinject(SETTINGS$1, 8), i0.ɵɵinject(TENANT_ID, 8), i0.ɵɵinject(LANGUAGE_CODE, 8), i0.ɵɵinject(USE_DEVICE_LANGUAGE, 8), i0.ɵɵinject(PERSISTENCE, 8), i0.ɵɵinject(i3.AppCheckInstances, 8));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AngularFirestore,\n    factory: AngularFirestore.ɵfac,\n    providedIn: 'any'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFirestore, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'any'\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [FIREBASE_OPTIONS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [FIREBASE_APP_NAME]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ENABLE_PERSISTENCE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [SETTINGS]\n    }]\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: i0.NgZone\n  }, {\n    type: i1.ɵAngularFireSchedulers\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [PERSISTENCE_SETTINGS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR]\n    }]\n  }, {\n    type: i2.AngularFireAuth,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_EMULATOR$1]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [SETTINGS$1]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TENANT_ID]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [LANGUAGE_CODE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [USE_DEVICE_LANGUAGE]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [PERSISTENCE]\n    }]\n  }, {\n    type: i3.AppCheckInstances,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\nclass AngularFirestoreModule {\n  constructor() {\n    firebase.registerVersion('angularfire', VERSION.full, 'fst-compat');\n  }\n  /**\n   * Attempt to enable persistent storage, if possible\n   */\n  static enablePersistence(persistenceSettings) {\n    return {\n      ngModule: AngularFirestoreModule,\n      providers: [{\n        provide: ENABLE_PERSISTENCE,\n        useValue: true\n      }, {\n        provide: PERSISTENCE_SETTINGS,\n        useValue: persistenceSettings\n      }]\n    };\n  }\n  static ɵfac = function AngularFirestoreModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AngularFirestoreModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AngularFirestoreModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [AngularFirestore]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFirestoreModule, [{\n    type: NgModule,\n    args: [{\n      providers: [AngularFirestore]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreCollectionGroup, AngularFirestoreDocument, AngularFirestoreModule, ENABLE_PERSISTENCE, PERSISTENCE_SETTINGS, SETTINGS, USE_EMULATOR, associateQuery, combineChange, combineChanges, docChanges, fromCollectionRef, fromDocRef, fromRef, sortedChanges, validateEventsArray };\n"],
  "mappings": "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",
  "names": ["DocumentReference", "WriteBatch", "name", "setLogLevel", "DocumentSnapshot", "QueryDocumentSnapshot", "query", "QuerySnapshot", "doc", "FieldPath", "firebase", "query", "docChanges", "SETTINGS", "USE_EMULATOR", "name", "collectionGroup"]
}
